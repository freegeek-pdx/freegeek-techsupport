#!/usr/bin/env python
from __future__ import absolute_import, print_function, unicode_literals
import smtplib
import argparse
import datetime
import sys

def send_email(mail_host, from_addr, mailto, subject, body):
    '''sends an email'''
    msg = MIMEText(body)
    msg['Subject'] = subject
    msg['From'] = from_addr
    msg['To'] = mailto
    msg.add_header('X-Mailer', 'minutes-mailer')
    msg.add_header('X-Sent-By-Robot', 
            'The city\'s central computer told you? R2D2, you know \
                    better than to trust a strange computer!')
    s = smtplib.SMTP(mail_host)
    try:
        s.sendmail(from_addr, mailto, msg.as_string())
        sent = True
    except:
        sent = False
    s.quit()
    if sent == True:
        return True
    else:
        return False

def read_options():
    parser = argparse.ArgumentParser()
    parser.add_argument("-s", "--send-draught", help="email draught minutes", action="store_true")
    parser.add_argument("-m", "--send-minutes", help="send final minutes", action="store_true")
    parser.add_argument("-d") "--date", help="date of minutes(if not today or 1 week ago)", action="store")
    args = parser.parse_args()
    if not args.date:
        if args.send_draught:
            args.date = 'today'
        elif args.send_minutes:
            args.date = 'lastweek'
    if not args.send_minutes and not args.send_draught:
            print('on of -d, 
    return 


1807  mailx -s 'DRAFT: Minutes 2013-06-26' -r 'paulm@freegeek.org'  technocrats@freegeek.org <  minutes.20130628
 3367  mailx -s 'Technocrats  Minutes 2013-07-19' -r 'paulm@freegeek.org'  minutes@freegeek.org <  Documents/technocrats/technocrats_minutes.20130719
 3383  mailx -s 'Technocrats  Minutes 2013-07-19' -r 'paulm@freegeek.org'  done+36615@todo.freegeek.org <  Documents/technocrats/technocrats_minutes.20130719
